version: '3.7'

# It is better to install Elastic Agent to your application compose. This base is based on fleet-compose.yml and only
# shows environment values and settings that must be set for agent to work

# https://www.elastic.co/guide/en/fleet/current/elastic-agent-container.html
# https://www.elastic.co/guide/en/fleet/current/agent-environment-variables.html#env-enroll-agent

services:
  elastic-agent:
    build:
      context: .
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    # Run as 'root' instead of 'elastic-agent' (uid 1000) to allow reading
    # 'docker.sock' and the host's filesystem.
    user: root
    volumes:
      - elastic-agent:/usr/share/elastic-agent/state:Z
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    environment:
      FLEET_ENROLL: '1'
      FLEET_INSECURE: '1'
      FLEET_SERVER_HOST: 0.0.0.0
      FLEET_ENROLLMENT_TOKEN: <TOKEN_HERE>
      FLEET_URL: http://fleet-server:8220
    ports:
      # Specify ports set in Kibana config UI here. 8221 is example
      - "8221:8221"
    hostname: elastic-agent
    # Elastic Agent does not retry failed connections to Kibana upon the initial enrollment phase.
    restart: on-failure
    networks:
      - elk
    depends_on:
      - elasticsearch
      - kibana

volumes:
  elastic-agent: